compound(STORY-3, APW20001019.0539.0213-1)
compound(STORY-3, NEWS-2)
root(ROOT-0, STORY-3)
nummod(07:00:43-5, 2000-10-19-4)
dep(STORY-3, 07:00:43-5)

root(ROOT-0, CAR-F1-Malaysian-GP-1)

compound(Ahead-3, Schumacher-1)
compound(Ahead-3, Looks-2)
root(ROOT-0, Ahead-3)
cc(Ahead-3, and-4)
conj:and(Ahead-3, Behind-5)

advcl(celebrating-10, SEPANG-1)
compound(Schumacher-7, Malaysia-3)
compound(Schumacher-7, (AP-4)
compound(Schumacher-7, )-5)
compound(Schumacher-7, Michael-6)
nsubj(celebrating-10, Schumacher-7)
aux(celebrating-10, is-8)
advmod(celebrating-10, still-9)
root(ROOT-0, celebrating-10)
nmod:poss(title-16, Ferrari-11)
case(Ferrari-11, 's-12)
amod(title-16, first-13)
compound(title-16, Formula-14)
nummod(title-16, One-15)
dobj(celebrating-10, title-16)
case(1979-18, since-17)
nmod:since(title-16, 1979-18)

nsubj(relief-5, ``It-1)
cop(relief-5, was-2)
det(relief-5, a-3)
amod(relief-5, great-4)
root(ROOT-0, relief-5)
acl(relief-5, crossing-6)
det(line-8, the-7)
dobj(crossing-6, line-8)
case(Schumacher-12, at-9)
compound(Schumacher-12, Suzuka-10)
compound(Schumacher-12, ,''-11)
nmod:at(crossing-6, Schumacher-12)
acl(Schumacher-12, said-13)
case(Oct-16, of-14)
det(Oct-16, the-15)
nmod:of(said-13, Oct-16)

nummod(Japanese-2, 8-1)
root(ROOT-0, Japanese-2)
compound(Prix-4, Grand-3)
dep(Japanese-2, Prix-4)

nsubj(couple-5, ``There-1)
aux(couple-5, has-2)
cop(couple-5, been-3)
det(couple-5, a-4)
root(ROOT-0, couple-5)
case(tons-7, of-6)
nmod:of(couple-5, tons-7)
case(stone-9, of-8)
nmod:of(tons-7, stone-9)
acl(stone-9, falling-10)
compound:prt(falling-10, away-11)

nsubj(unable-3, I-1)
nsubj(find-5, I-1)
cop(unable-3, 'm-2)
root(ROOT-0, unable-3)
mark(find-5, to-4)
xcomp(unable-3, find-5)
det(words-8, the-6)
amod(words-8, exact-7)
dobj(find-5, words-8)
nsubj(express-10, words-8)
mark(express-10, to-9)
xcomp(find-5, express-10)
case(way-14, in-11)
det(way-14, a-12)
amod(way-14, proper-13)
nmod:in(express-10, way-14)
dobj(.''-19, way-14)
ref(way-14, what-15)
nsubj(.''-19, it-16)
cop(.''-19, was-17)
case(.''-19, like-18)
acl:relcl(way-14, .''-19)

amod(pressure-2, ``The-1)
nsubj(higher-7, pressure-2)
aux(higher-7, could-3)
neg(higher-7, not-4)
aux(higher-7, have-5)
cop(higher-7, been-6)
root(ROOT-0, higher-7)
det(year-9, this-8)
nmod:tmod(higher-7, year-9)

advmod(fulfilled-5, Now-1)
mark(fulfilled-5, that-2)
nsubj(fulfilled-5, we-3)
aux(fulfilled-5, have-4)
advcl(.''-15, fulfilled-5)
nmod:poss(wish-8, our-6)
amod(wish-8, main-7)
dobj(fulfilled-5, wish-8)
det(pressure-11, the-10)
nsubj(.''-15, pressure-11)
aux(.''-15, will-12)
cop(.''-15, be-13)
advmod(.''-15, less-14)
root(ROOT-0, .''-15)

nsubj(enters-16, Schumacher-1)
det(star-5, the-3)
amod(star-5, German-4)
appos(Schumacher-1, star-5)
nsubj(won-7, star-5)
ref(star-5, who-6)
acl:relcl(star-5, won-7)
dobj(won-7, titles-8)
case(1994-10, in-9)
nmod:in(won-7, 1994-10)
cc(1994-10, and-11)
nmod:in(won-7, 1995-12)
conj:and(1994-10, 1995-12)
case(Benetton-14, with-13)
nmod:with(won-7, Benetton-14)
root(ROOT-0, enters-16)
nmod:poss(Prix-22, Sunday-17)
case(Sunday-17, 's-18)
amod(Prix-22, season-ending-19)
amod(Prix-22, Malaysian-20)
compound(Prix-22, Grand-21)
dobj(enters-16, Prix-22)
case(lead-27, with-23)
det(lead-27, an-24)
amod(lead-27, insurmountable-25)
amod(lead-27, 12-point-26)
nmod:with(Prix-22, lead-27)
case(Hakkinen-33, over-28)
amod(Hakkinen-33, two-time-29)
amod(Hakkinen-33, defending-30)
compound(Hakkinen-33, champion-31)
compound(Hakkinen-33, Mika-32)
nmod:over(lead-27, Hakkinen-33)
case(McLaren-35, of-34)
nmod:of(Prix-22, McLaren-35)

nsubj(championship-20, ``Now-1)
mark(achieved-5, that-2)
nsubj(achieved-5, we-3)
aux(achieved-5, have-4)
dep(``Now-1, achieved-5)
det(target-8, the-6)
amod(target-8, first-7)
dobj(achieved-5, target-8)
det(target-12, the-10)
amod(target-12, next-11)
appos(target-8, target-12)
nsubj(like-15, we-13)
aux(like-15, would-14)
acl:relcl(target-12, like-15)
cop(championship-20, is-16)
det(constructors-18, the-17)
nmod:poss(championship-20, constructors-18)
case(constructors-18, '-19)
root(ROOT-0, championship-20)
compound(Schumacher-22, ,''-21)
nsubj(said-23, Schumacher-22)
acl:relcl(championship-20, said-23)

nsubj(hands-5, ``It-1)
cop(hands-5, is-2)
case(hands-5, in-3)
nmod:poss(hands-5, our-4)
root(ROOT-0, hands-5)

nsubj(need-3, We-1)
advmod(need-3, just-2)
root(ROOT-0, need-3)
det(place-6, a-4)
amod(place-6, fourth-5)
dobj(need-3, place-6)
nsubj(.''-14, place-6)
ref(place-6, which-8)
cop(.''-14, is-9)
advmod(.''-14, well-10)
case(means-13, within-11)
nmod:poss(means-13, our-12)
nmod:within(well-10, means-13)
acl:relcl(place-6, .''-14)

nsubj(leads-2, Ferrari-1)
root(ROOT-0, leads-2)
dobj(leads-2, McLaren-3)
case(points-6, by-4)
nummod(points-6, 13-5)
nmod:by(leads-2, points-6)

compound(Coulthard-6, Hakkinen-1)
cc(Hakkinen-1, and-2)
conj:and(Hakkinen-1, McLaren-3)
compound(Coulthard-6, McLaren-3)
compound(Coulthard-6, teammate-4)
compound(Coulthard-6, David-5)
nsubj(need-7, Coulthard-6)
nsubj(finish-9, Coulthard-6)
dep(grab-19, need-7)
mark(finish-9, to-8)
xcomp(need-7, finish-9)
case(least-11, at-10)
advmod(first-12, least-11)
xcomp(finish-9, first-12)
cc(first-12, and-13)
xcomp(finish-9, third-14)
conj:and(first-12, third-14)
cc(first-12, and-15)
xcomp(finish-9, shut-16)
conj:and(first-12, shut-16)
dep(shut-16, out-17)
nsubj(grab-19, Ferrari-18)
root(ROOT-0, grab-19)
xcomp(grab-19, snatch-20)
det(constructors-22, the-21)
nmod:poss(title-24, constructors-22)
case(constructors-22, '-23)
dobj(snatch-20, title-24)

advmod(have-27, However-1)
mark(score-9, if-3)
compound(Barrichello-8, Schumacher-4)
cc(Schumacher-4, and-5)
conj:and(Schumacher-4, teammate-6)
compound(Barrichello-8, teammate-6)
compound(Barrichello-8, Rubens-7)
nsubj(score-9, Barrichello-8)
advcl(have-27, score-9)
case(least-11, at-10)
nmod:npmod(three-12, least-11)
nummod(points-13, three-12)
dobj(score-9, points-13)
cc(score-9, or-15)
mark(win-21, if-16)
det(McLaren-18, a-17)
nsubj(win-21, McLaren-18)
aux(win-21, does-19)
neg(win-21, not-20)
conj:or(score-9, win-21)
advcl(have-27, win-21)
det(race-23, the-22)
dobj(win-21, race-23)
nsubj(have-27, Ferrari-25)
aux(have-27, will-26)
root(ROOT-0, have-27)
det(constructor-29, the-28)
dobj(have-27, constructor-29)
cc(constructor-29, and-30)
dobj(have-27, driving-31)
conj:and(constructor-29, driving-31)
advmod(constructor-29, double-32)
case(time-36, for-33)
det(time-36, the-34)
amod(time-36, first-35)
nmod:for(double-32, time-36)
case(1979-38, since-37)
nmod:since(have-27, 1979-38)
advmod(paced-43, when-40)
compound(Scheckter-42, Jody-41)
nsubj(paced-43, Scheckter-42)
advcl(have-27, paced-43)
dobj(paced-43, Ferrari-44)
case(victories-47, to-45)
det(victories-47, both-46)
nmod:to(paced-43, victories-47)

nsubj(taken-3, ``It-1)
nsubj(competitive-10, ``It-1)
aux(taken-3, has-2)
root(ROOT-0, taken-3)
nummod(years-5, five-4)
nmod:at(taken-3, years-5)
case(years-5, at-6)
dep(years-5, Ferrari-7)
mark(competitive-10, to-8)
cop(competitive-10, be-9)
xcomp(taken-3, competitive-10)
case(race-14, from-11)
det(race-14, the-12)
amod(race-14, first-13)
nmod:from(competitive-10, race-14)
mark(said-20, until-15)
det(Schumacher-19, the-16)
amod(Schumacher-19, last-17)
compound(Schumacher-19, ,''-18)
nsubj(said-20, Schumacher-19)
advcl(competitive-10, said-20)

root(ROOT-0, ``Now-1)
mark(have-4, that-2)
nsubj(have-4, we-3)
ccomp(``Now-1, have-4)
dobj(have-4, it-5)
nsubj(nice-9, it-7)
nsubj(be-11, it-7)
cop(nice-9, is-8)
ccomp(``Now-1, nice-9)
conj:and(have-4, nice-9)
mark(be-11, to-10)
xcomp(nice-9, be-11)
advmod(be-11, there-12)
cc(have-4, and-13)
nsubj(have-15, we-14)
nsubj(take-17, we-14)
ccomp(``Now-1, have-15)
conj:and(have-4, have-15)
mark(take-17, to-16)
xcomp(have-15, take-17)
dobj(take-17, advantage-18)
case(.''-22, of-19)
det(.''-22, the-20)
compound(.''-22, situation-21)
nmod:of(advantage-18, .''-22)

nsubj(has-2, Schumacher-1)
root(ROOT-0, has-2)
nummod(victories-4, eight-3)
dobj(has-2, victories-4)
det(year-6, this-5)
dep(victories-4, year-6)
cc(victories-4, and-7)
dobj(has-2, 43-8)
conj:and(victories-4, 43-8)
amod(second-11, overall-9)
amod(43-8, second-11)
advmod(43-8, only-12)
case(Prost-15, to-13)
compound(Prost-15, Alain-14)
nmod:to(only-12, Prost-15)
nummod()-17, (53-16)
dep(43-8, )-17)
case(list-21, on-18)
det(list-21, the-19)
compound(list-21, career-20)
nmod:on()-17, list-21)

nsubj(young-4, ``I-1)
cop(young-4, 'm-2)
advmod(young-4, still-3)
root(ROOT-0, young-4)

nsubj(old-6, I-1)
cop(old-6, 'm-2)
advmod(years-5, only-3)
nummod(years-5, 31-4)
nmod:npmod(old-6, years-5)
root(ROOT-0, old-6)

nsubj(enjoy-2, I-1)
root(ROOT-0, enjoy-2)
dobj(enjoy-2, racing-3)

nsubj(enjoy-2, I-1)
root(ROOT-0, enjoy-2)
xcomp(enjoy-2, working-3)
mark(said-8, with-4)
compound(Schumacher-7, Ferrari-5)
compound(Schumacher-7, ,''-6)
nsubj(said-8, Schumacher-7)
advcl(working-3, said-8)

nsubj(want-3, ``I-1)
nsubj(enjoy-5, ``I-1)
advmod(want-3, simply-2)
root(ROOT-0, want-3)
mark(enjoy-5, to-4)
xcomp(want-3, enjoy-5)
dobj(enjoy-5, more-6)
case(time-9, of-7)
det(time-9, this-8)
nmod:of(more-6, time-9)
mark(had-12, like-10)
nsubj(had-12, we-11)
advcl(enjoy-5, had-12)
case(Suzuka-14, at-13)
nmod:at(had-12, Suzuka-14)

cc(sure-4, And-1)
nsubj(sure-4, I-2)
cop(sure-4, am-3)
root(ROOT-0, sure-4)
nsubj(will-6, we-5)
nsubj(enjoy-10, we-5)
dep(sure-4, will-6)
cc(will-6, and-7)
advmod(not-9, why-8)
advmod(enjoy-10, not-9)
dep(sure-4, enjoy-10)
conj:and(will-6, enjoy-10)
nsubj(.''-13, it-11)
advmod(.''-13, together-12)
xcomp(enjoy-10, .''-13)

nsubj(has-2, Schumacher-1)
root(ROOT-0, has-2)
det(contract-4, a-3)
dobj(has-2, contract-4)
case(team-8, with-5)
det(team-8, the-6)
amod(team-8, Italian-7)
nmod:with(contract-4, team-8)
case(2002-10, through-9)
nmod:through(has-2, 2002-10)

nsubj(early-4, ``It-1)
nsubj(start-6, ``It-1)
cop(early-4, 's-2)
advmod(early-4, too-3)
root(ROOT-0, early-4)
mark(start-6, to-5)
xcomp(early-4, start-6)
xcomp(start-6, speculating-7)
mark(do-12, about-8)
dobj(do-12, what-9)
nsubj(do-12, I-10)
aux(do-12, will-11)
advcl(speculating-7, do-12)
mark(said-17, after-13)
compound(Schumacher-16, 2002-14)
compound(Schumacher-16, ,''-15)
nsubj(said-17, Schumacher-16)
advcl(do-12, said-17)

nsubj(start-3, ``I-1)
aux(start-3, 'll-2)
root(ROOT-0, start-3)
xcomp(start-3, thinking-4)
xcomp(start-3, thinking-4')
conj:or(thinking-4, thinking-4')
case(it-6, about-5)
nmod:about(thinking-4, it-6)
case(end-9, at-7)
det(end-9, the-8)
nmod:at(thinking-4, end-9)
case(2001-11, of-10)
nmod:of(end-9, 2001-11)
cc(thinking-4, or-12)
case(beginning-15, at-13)
det(beginning-15, the-14)
nmod:at(thinking-4', beginning-15)
case(2002-17, of-16)
nmod:of(beginning-15, 2002-17)

root(ROOT-0, Not-1)
dep(Not-1, before-2)
dep(Not-1, .''-3)

det(session-3, A-1)
compound(session-3, practice-2)
nsubjpass(set-5, session-3)
auxpass(set-5, is-4)
root(ROOT-0, set-5)
case(Friday-7, for-6)
nmod:for(set-5, Friday-7)
cc(set-5, and-9)
det(drivers-11, the-10)
nsubj(qualify-13, drivers-11)
aux(qualify-13, will-12)
conj:and(set-5, qualify-13)
dobj(qualify-13, Saturday-14)
case(race-19, for-15)
nmod:poss(race-19, Sunday-16)
case(Sunday-16, 's-17)
amod(race-19, 56-lap-18)
nmod:for(Saturday-14, race-19)
case(circuit-22, on-20)
amod(circuit-22, 3.44-mile-21)
nmod:on(qualify-13, circuit-22)

nsubj(like-3, ``I-1)
nsubj(win-5, ``I-1)
aux(like-3, would-2)
root(ROOT-0, like-3)
mark(win-5, to-4)
xcomp(like-3, win-5)
det(race-7, the-6)
dobj(win-5, race-7)
compound(Schumacher-9, ,''-8)
nsubj(said-10, Schumacher-9)
acl:relcl(race-7, said-10)

nsubj(see-2, ``I-1)
root(ROOT-0, see-2)
dobj(see-2, this-3)
case(race-6, as-4)
det(race-6, a-5)
nmod:as(this-3, race-6)
case(.''-9, for-7)
compound(.''-9, fun-8)
nmod:for(race-6, .''-9)

